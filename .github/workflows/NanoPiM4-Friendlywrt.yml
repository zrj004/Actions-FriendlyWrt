name: NanoPi M4 FriendlyWrt + SSR Plus+ (Docker & 非Docker)

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0' # 每周日自动构建

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        SET: [docker, non-docker]
    env:
      FRIENDLYWRT_MANIFEST: "https://github.com/friendlyarm/friendlywrt_manifests"
      BRANCH: "master-v24.10"
    steps:
      - name: 检出源码
        uses: actions/checkout@v3

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y git python3 wget unzip xz-utils build-essential libncurses5-dev zlib1g-dev gcc g++ make gcc-multilib gawk flex bison gettext libssl-dev python3-distutils rsync qemu-user-static parted dosfstools kpartx docker.io

      - name: 克隆 FriendlyWrt manifests
        run: |
          mkdir -p project
          cd project
          git clone --depth=1 -b $BRANCH $FRIENDLYWRT_MANIFEST friendlywrt_manifests

      - name: 初始化 FriendlyWrt 源码
        run: |
          cd project
          repo init -u $FRIENDLYWRT_MANIFEST -b $BRANCH -m rk3399.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          repo sync -c friendlywrt --no-clone-bundle
          repo sync -c device/friendlyelec --no-clone-bundle
          repo sync -c scripts --no-clone-bundle
          repo sync -c toolchain --no-clone-bundle

      - name: 添加 SSR Plus+ 包
        run: |
          cd project/friendlywrt
          mkdir -p package/custom
          git clone --depth=1 https://github.com/ophub/luci-app-ssr-plus.git package/custom/luci-app-ssr-plus
          echo "" > feeds.conf.default
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 配置编译
        run: |
          cd project/friendlywrt
          if [ "${{ matrix.SET }}" == "docker" ]; then
            echo "CONFIG_DOCKER=y" >> .config
          fi
          make defconfig

      - name: 编译 FriendlyWrt + SSR Plus+
        run: |
          cd project/friendlywrt
          make -j$(nproc) || make -j1 V=s

      - name: 构建 SD 镜像或 Docker rootfs
        run: |
          cd project/friendlywrt
          mkdir -p ../../artifact
          if [ "${{ matrix.SET }}" == "docker" ]; then
            make image/ramdisk/rootfs.tar.gz
            cp -v tmp/rootfs.tar.gz ../../artifact/友善路由-NanoPiM4-Docker-rootfs.tar.gz
          else
            ./build.sh sd-img
            mv out/NanoPiM4-*.img ../../artifact/
            gzip ../../artifact/NanoPiM4-*.img
          fi

      - name: 创建 GitHub Release
        id: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: "友善路由-NanoPiM4-${{ matrix.SET }}-$(date +%Y-%m-%d)"
          name: "友善路由 NanoPiM4 ${ { matrix.SET } } 镜像 $(date +%Y-%m-%d)"
          draft: false
          prerelease: false

      - name: 上传构建产物
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: artifact/*
          asset_name: "${{ matrix.SET }}-镜像"
          tag: ${{ steps.release.outputs.tag_name }}
