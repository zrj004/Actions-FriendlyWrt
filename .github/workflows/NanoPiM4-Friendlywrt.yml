name: Build FriendlyWrt NanoPi M4

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * 0'  # 每周日凌晨 3 点自动编译一次

jobs:
  prepare_release:
    runs-on: ubuntu-22.04
    steps:
    - name: Get release tag
      id: release_tag
      run: |
        release_tag="FriendlyWrt-$(date +%Y-%m-%d)"
        echo "release_tag=$release_tag" >> $GITHUB_OUTPUT

    - name: Create empty release
      id: release
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.release_tag.outputs.release_tag }}
        draft: false
        prerelease: false
    outputs:
      release_tag: ${{ steps.release_tag.outputs.release_tag }}
      upload_url: ${{ steps.release.outputs.upload_url }}

  build_friendlywrt:
    needs: prepare_release
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        SET: [docker, non-docker]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Environment
      run: |
        sudo rm -rf /etc/apt/sources.list.d
        wget https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh
        sed -i -e 's/^apt-get -y install openjdk-8-jdk/# apt-get -y install openjdk-8-jdk/g' install.sh
        sudo bash ./install.sh
        git clone https://github.com/friendlyarm/repo
        sudo cp repo/repo /usr/bin/
        mkdir -p artifact
        sudo swapoff -a

    - name: Download FriendlyWrt source
      run: |
        mkdir -p project && cd project
        repo init --depth=1 -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v23.05 \
          -m rk3399.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
        repo sync -c friendlywrt --no-clone-bundle
        repo sync -c configs --no-clone-bundle
        repo sync -c device/friendlyelec --no-clone-bundle
        repo sync -c scripts --no-clone-bundle
        repo sync -c toolchain --no-clone-bundle

    - name: Apply minimal config
      run: |
        cd project
        # 只保留 SSR Plus+
        mkdir -p friendlywrt/package/custom
        echo "src-git custom https://github.com/your-repo/ssr-plus-package.git" > feeds.conf.custom
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        make defconfig

    - name: Compile FriendlyWrt
      run: |
        cd project/friendlywrt
        make -j$(nproc)

    - name: Create rootfs package
      run: |
        cd project/friendlywrt
        tar czf ../../artifact/rootfs-nanopi-m4.tgz ./bin ./package

    - name: Upload rootfs
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./artifact/rootfs-nanopi-m4.tgz
        asset_name: rootfs-nanopi-m4.tgz
        tag: ${{ needs.prepare_release.outputs.release_tag }}
        overwrite: true

  build_img:
    needs: build_friendlywrt
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        SET: [docker, non-docker]

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Setup Environment
      run: |
        sudo rm -rf /etc/apt/sources.list.d
        wget https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh
        sudo bash ./install.sh
        git clone https://github.com/friendlyarm/repo
        sudo cp repo/repo /usr/bin/
        mkdir -p artifact
        sudo swapoff -a

    - name: Download rootfs
      run: |
        cd project
        if [ "${{ matrix.SET }}" == "docker" ]; then
          curl -L -o rootfs-nanopi-m4.tgz https://github.com/${{ github.repository }}/releases/download/${{ needs.prepare_release.outputs.release_tag }}/rootfs-nanopi-m4.tgz
        else
          curl -L -o rootfs-nanopi-m4.tgz https://github.com/${{ github.repository }}/releases/download/${{ needs.prepare_release.outputs.release_tag }}/rootfs-nanopi-m4.tgz
        fi
        tar xzf rootfs-nanopi-m4.tgz

    - name: Compile uboot and kernel
      run: |
        cd project/friendlywrt
        ./build.sh uboot
        ./build.sh kernel

    - name: Build SD card image
      run: |
        cd project/friendlywrt
        ./build.sh sd-img
        mv out/*.img ../../artifact/
        cd ../../artifact
        gzip *.img

    - name: Upload SD image
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./artifact/*.img.gz
        asset_name: nanopi-m4-friendlywrt.img.gz
        tag: ${{ needs.prepare_release.outputs.release_tag }}
        overwrite: true
