name: FriendlyWrt-NanoPiM4-编译

on:
  schedule:
    - cron: '0 3 * * 1'  # 每周一凌晨3点自动触发
  workflow_dispatch:     # 手动触发
  watch:
    types: started

jobs:
  prepare_release:
    runs-on: ubuntu-22.04
    steps:
      - name: 获取发布标签
        id: release_tag
        run: |
          release_tag="FriendlyWrt-NanoPiM4-$(date +%Y-%m-%d)"
          echo "##[set-output name=release_tag;]$release_tag"

      - name: 创建空发布
        id: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_tag.outputs.release_tag }}
          draft: false
          prerelease: false

    outputs:
      release_tag: ${{ steps.release_tag.outputs.release_tag }}
      upload_url: ${{ steps.release.outputs.upload_url }}

  build_friendlywrt:
    needs: prepare_release
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        SET: [docker, non-docker]

    steps:
      - name: 检出代码
        uses: actions/checkout@v3

      - name: 初始化环境
        run: |
          sudo rm -rf /etc/apt/sources.list.d
          sudo apt-get update
          sudo apt-get install -y unzip wget zlib1g-dev git build-essential curl qemu-user-static

      - name: 安装 Docker（仅 docker 选项）
        if: matrix.SET == 'docker'
        run: |
          curl -fsSL https://get.docker.com | sh
          sudo systemctl enable docker
          sudo systemctl start docker

      - name: 下载 FriendlyWrt rootfs
        run: |
          mkdir project
          cd project
          wget -O friendlywrt-rootfs.tgz https://github.com/friendlyarm/friendlywrt/releases/download/rootfs/rootfs-nanopi-m4.tgz
          tar xzf friendlywrt-rootfs.tgz

      - name: 拉取 SSR Plus+ feed
        run: |
          cd project/friendlywrt
          mkdir -p package/custom
          echo "src-git custom https://github.com/ophub/luci-app-ssr-plus.git" > feeds.conf.custom
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 准备配置文件
        run: |
          cd project/friendlywrt
          [ "${{ matrix.SET }}" == "docker" ] && SUFFIX="-docker" || SUFFIX=""
          DIRNAME=friendlywrt-nanopi-m4${SUFFIX}
          CONFIG=nanopi-m4${SUFFIX}
          cat > .current_config.mk <<EOL
          . device/friendlyelec/rk3399/base.mk
          TARGET_IMAGE_DIRNAME=${DIRNAME}
          TARGET_FRIENDLYWRT_CONFIG=${CONFIG}
          TARGET_SD_RAW_FILENAME=${DIRNAME}.img
          EOL
          make defconfig

      - name: 编译 FriendlyWrt
        run: |
          cd project/friendlywrt
          make -j$(nproc) || make -j1 V=s

      - name: 生成 SD 卡镜像
        run: |
          cd project/friendlywrt
          ./scripts/mkimage.sh -t sd
          mv images/*.img ../../artifact/
          cd ../../artifact/
          gzip *.img

      - name: 上传 SD 卡镜像到 release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/*.img.gz
          asset_name: FriendlyWrt-NanoPiM4-镜像.img.gz
          tag: ${{ needs.prepare_release.outputs.release_tag }}
          overwrite: true
