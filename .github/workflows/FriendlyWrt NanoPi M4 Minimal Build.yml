name: FriendlyWrt NanoPi M4 Build

on:
  workflow_dispatch: {}           # 手动触发
  schedule:
    - cron: "0 0 * * 0"          # 每周日 UTC 00:00

env:
  FW_VERSION: "23.05"            # FriendlyWrt 版本
  CPU: "rk3399"                  # NanoPi M4

jobs:
  prepare_release:
    runs-on: ubuntu-22.04
    steps:
      - name: Get release tag
        id: release_tag
        run: |
          release_tag="FriendlyWrt-NanoPiM4-${{ env.FW_VERSION }}-$(date +%Y-%m-%d)"
          echo "release_tag=$release_tag" >> $GITHUB_OUTPUT

      - name: Create empty release
        id: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_tag.outputs.release_tag }}
          draft: false
          prerelease: false

  build_sd_image:
    needs: prepare_release
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        SET: [docker, non-docker]   # 两种版本
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Init Environment and Install Repo
        run: |
          sudo rm -rf /etc/apt/sources.list.d
          wget https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh
          sudo bash ./install.sh
          sudo swapoff -a
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android/sdk /usr/local/share/boost /opt/ghc
          echo "cores: $(nproc)"
          
          # 安装 repo 工具
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          echo "export PATH=\$HOME/bin:\$PATH" >> $GITHUB_ENV

      - name: Download source (minimal)
        run: |
          mkdir -p project && cd project
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests \
                    -b master-v${{ env.FW_VERSION }} \
                    -m ${CPU}.xml --repo-url=https://github.com/friendlyarm/repo
          repo sync -c friendlywrt --no-clone-bundle

      - name: Apply minimal customization (SSR Plus+)
        run: |
          cd project
          echo 'src-git packages https://github.com/coolsnowwolf/packages' > feeds.conf
          ./scripts/feeds update -a
          ./scripts/feeds install -a luci-app-ssr-plus

      - name: Prepare .config
        run: |
          cd project/friendlywrt
          make defconfig
          echo "CONFIG_PACKAGE_luci-app-ssr-plus=y" >> .config
          if [ "${{ matrix.SET }}" == "docker" ]; then
            echo "CONFIG_PACKAGE_docker=y" >> .config
          fi

      - name: Compile FriendlyWrt
        run: |
          cd project/friendlywrt
          make -j$(nproc) || make -j1 V=s

      - name: Create rootfs package
        run: |
          cd project/friendlywrt
          [ "${{ matrix.SET }}" == "docker" ] && SUFFIX="-docker" || SUFFIX=""
          mkdir -p ../../artifact
          tar czf ../../artifact/rootfs-nanopi-m4${SUFFIX}.tgz ./bin/targets/rockchip/armv8/

      - name: Build SD image
        run: |
          cd project/friendlywrt
          ./build.sh sd-img
          IMG_NAME=NanoPiM4-FriendlyWrt-${{ env.FW_VERSION }}
          [ "${{ matrix.SET }}" == "docker" ] && IMG_NAME="${IMG_NAME}-docker"
          mv out/${IMG_NAME}.img ../../artifact/
          cd ../../artifact
          gzip ${IMG_NAME}.img

      - name: Upload rootfs
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/rootfs-nanopi-m4${{ matrix.SET == 'docker' && '-docker' || '' }}.tgz
          asset_name: rootfs-nanopi-m4${{ matrix.SET == 'docker' && '-docker' || '' }}.tgz
          tag: ${{ needs.prepare_release.outputs.release_tag }}
          overwrite: true

      - name: Upload SD image
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/NanoPiM4-FriendlyWrt-${{ env.FW_VERSION }}${{ matrix.SET == 'docker' && '-docker' || '' }}.img.gz
          asset_name: NanoPiM4-FriendlyWrt-${{ env.FW_VERSION }}${{ matrix.SET == 'docker' && '-docker' || '' }}.img.gz
          tag: ${{ needs.prepare_release.outputs.release_tag }}
          overwrite: true
