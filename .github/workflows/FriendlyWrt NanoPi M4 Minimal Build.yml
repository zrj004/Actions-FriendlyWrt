name: FriendlyWrt_NanoPi_M4_Minimal

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * 0' # 每周日 0 点触发

jobs:
  prepare_release:
    runs-on: ubuntu-22.04
    steps:
      - name: Get release tag
        id: release_tag
        run: |
          release_tag="FriendlyWrt-$(date +%Y-%m-%d)"
          echo "release_tag=$release_tag" >> $GITHUB_OUTPUT

      - name: Create empty release
        id: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_tag.outputs.release_tag }}
          draft: false
          prerelease: false
    outputs:
      release_tag: ${{ steps.release_tag.outputs.release_tag }}

  build_friendlywrt:
    needs: prepare_release
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        VERSION: ['24.10']
        SET: [docker, non-docker]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup environment
        run: |
          sudo apt update
          sudo apt install -y git wget python3 curl unzip build-essential bc ccache
          mkdir -p ~/bin
          curl -s https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          export PATH=~/bin:$PATH
          wget https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh
          sudo bash ./install.sh
          sudo git config --global user.name 'GitHub Actions'
          sudo git config --global user.email 'noreply@github.com'
          mkdir -p artifact
          sudo swapoff -a

      - name: Download source
        run: |
          mkdir -p project && cd project
          export PATH=~/bin:$PATH
          repo init -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v${{ matrix.VERSION }} \
            -m rk3399.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          repo sync --no-clone-bundle

      - name: Apply customizations
        run: |
          cd project
          source ../scripts/add_packages.sh
          source ../scripts/custome_config.sh

      - name: Set SUFFIX
        id: set_suffix
        run: |
          if [ "${{ matrix.SET }}" = "docker" ]; then
            echo "suffix=-docker" >> $GITHUB_OUTPUT
          else
            echo "suffix=" >> $GITHUB_OUTPUT
          fi

      - name: Prepare minimal config
        run: |
          cd project
          cat > .config <<EOL
CONFIG_PACKAGE_base-files=y
CONFIG_PACKAGE_busybox=y
CONFIG_PACKAGE_luci=y
CONFIG_PACKAGE_luci-ssl=y
CONFIG_PACKAGE_luci-app-ssr-plus=y
EOL
          make defconfig

      - name: Download package
        run: |
          cd project/friendlywrt
          make download -j8
          find dl -size -1024c -delete

      - name: Compile friendlyWrt
        id: compile
        continue-on-error: true
        run: |
          cd project/friendlywrt
          make -j$(nproc) || make -j1 V=s

      - name: Retry if failed
        if: steps.compile.outcome == 'failure'
        run: |
          cd project/friendlywrt
          make -j1 V=s

      - name: Create rootfs package
        id: create_rootfs_package
        run: |
          cd project
          ROOTFS_SUFFIX=${{ steps.set_suffix.outputs.suffix }}
          ROOTFS_FILE=rootfs-friendlywrt-${{ matrix.VERSION }}$ROOTFS_SUFFIX.tgz
          tar czf ../artifact/$ROOTFS_FILE ${FRIENDLYWRT_SRC}/${FRIENDLYWRT_ROOTFS} \
                ${FRIENDLYWRT_SRC}/${FRIENDLYWRT_PACKAGE_DIR}
          echo "rootfs_filename=$ROOTFS_FILE" >> $GITHUB_OUTPUT

      - name: Upload rootfs
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/${{ steps.create_rootfs_package.outputs.rootfs_filename }}
          asset_name: ${{ steps.create_rootfs_package.outputs.rootfs_filename }}
          tag: ${{ needs.prepare_release.outputs.release_tag }}
          overwrite: true
