name: 自动构建 NanoPi M4 FriendlyWrt

on:
  schedule:
    - cron: '0 3 * * 0'  # 每周日 UTC 3:00 执行一次
  workflow_dispatch:

env:
  FRIENDLYWRT_VERSION: 24.10
  CPU: rk3399

jobs:
  prepare_release:
    runs-on: ubuntu-22.04
    steps:
      - name: 生成 Release 标签
        id: release_tag
        run: |
          release_tag="FriendlyWrt-${{ env.FRIENDLYWRT_VERSION }}-$(date +%Y-%m-%d)"
          echo "release_tag=$release_tag" >> $GITHUB_OUTPUT

      - name: 创建空 Release
        id: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_tag.outputs.release_tag }}
          draft: false
          prerelease: false
    outputs:
      release_tag: ${{ steps.release_tag.outputs.release_tag }}

  build_friendlywrt:
    needs: prepare_release
    runs-on: ubuntu-22.04
    steps:
      - name: Checkout 仓库
        uses: actions/checkout@v3

      - name: 安装基础工具
        run: |
          sudo apt-get update
          sudo apt-get install -y unzip wget git python3 curl

      - name: 安装 repo 工具
        run: |
          mkdir -p ~/bin
          curl https://storage.googleapis.com/git-repo-downloads/repo > ~/bin/repo
          chmod a+x ~/bin/repo
          echo "export PATH=~/bin:$PATH" >> $GITHUB_ENV

      - name: 初始化构建环境
        run: |
          wget https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh
          sed -i 's/^apt-get -y install openjdk-8-jdk/# &/' install.sh
          sudo bash ./install.sh
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'noreply@github.com'
          mkdir -p artifact project

      - name: 下载 FriendlyWrt 源码
        run: |
          cd project
          repo init --depth=1 -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v${{ env.FRIENDLYWRT_VERSION }} -m rk3399.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          repo sync -c friendlywrt --no-clone-bundle
          repo sync -c device/friendlyelec --no-clone-bundle
          repo sync -c scripts --no-clone-bundle
          repo sync -c toolchain --no-clone-bundle

      - name: 添加 SSR Plus+ 包
        run: |
          cd project
          mkdir -p package/custom
          cd package/custom
          git clone --depth=1 https://github.com/ophub/luci-app-ssr-plus.git
          cd ../../..

      - name: 准备配置文件与 feeds
        run: |
          cd project
          SUFFIX="-docker"
          DIRNAME=friendlywrt${{ env.FRIENDLYWRT_VERSION | split('.') | first }}${SUFFIX}
          CONFIG=rockchip${SUFFIX}
          cat > .current_config.mk <<EOL
          . device/friendlyelec/rk3399/base.mk
          TARGET_IMAGE_DIRNAME=${DIRNAME}
          TARGET_FRIENDLYWRT_CONFIG=${CONFIG}
          EOL

      - name: 下载依赖包
        run: |
          cd project/friendlywrt
          make download -j$(nproc)

      - name: 编译 FriendlyWrt
        run: |
          cd project/friendlywrt
          make -j$(nproc) || make -j1 V=s

      - name: 打包 rootfs
        id: create_rootfs_package
        run: |
          cd project
          rootfs_filename="rootfs-friendlywrt-${{ env.FRIENDLYWRT_VERSION }}-docker.tgz"
          tar czf ../artifact/${rootfs_filename} friendlywrt/rootfs friendlywrt/package
          echo "rootfs_filename=$rootfs_filename" >> $GITHUB_OUTPUT

      - name: 上传 rootfs 到 Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/${{ steps.create_rootfs_package.outputs.rootfs_filename }}
          asset_name: ${{ steps.create_rootfs_package.outputs.rootfs_filename }}
          tag: ${{ needs.prepare_release.outputs.release_tag }}
          overwrite: true
