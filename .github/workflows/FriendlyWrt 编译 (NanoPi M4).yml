name: FriendlyWrt 每周自动构建

on:
  schedule:
    - cron: '0 2 * * 1' # 每周一凌晨 2 点
  workflow_dispatch:

jobs:
  prepare_release:
    runs-on: ubuntu-22.04
    steps:
      - name: 生成 Release 标签
        id: release_tag
        run: |
          RELEASE_TAG="FriendlyWrt-$(date +%Y-%m-%d)"
          echo "生成的 Release 标签: $RELEASE_TAG"
          echo "##[set-output name=release_tag;]$RELEASE_TAG"

      - name: 创建空 Release
        id: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_tag.outputs.release_tag }}
          draft: false
          prerelease: false

  build_rootfs:
    needs: prepare_release
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        VERSION: ['23.05', '24.10']
        SET: [docker, non-docker]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 初始化环境
        run: |
          sudo apt update && sudo apt install -y unzip wget git python3 bc build-essential

      - name: 下载 FriendlyWrt 源码
        run: |
          mkdir -p friendlywrt
          # 这里假设你有现成 rootfs 上传到 Release 或者手动放置
          echo "这里使用现成 rootfs 文件"

      - name: 打包 Rootfs
        id: create_rootfs
        run: |
          mkdir -p artifact
          SUFFIX="${{ matrix.SET == 'docker' && '-docker' || '' }}"
          ROOTFS_FILE="rootfs-friendlywrt-${{ matrix.VERSION }}${SUFFIX}.tgz"
          tar czf artifact/$ROOTFS_FILE friendlywrt/
          echo "##[set-output name=rootfs_filename;]$ROOTFS_FILE"

      - name: 上传 Rootfs 到 Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/${{ steps.create_rootfs.outputs.rootfs_filename }}
          asset_name: ${{ steps.create_rootfs.outputs.rootfs_filename }}
          tag: ${{ needs.prepare_release.outputs.release_tag }}
          overwrite: true

  build_img:
    needs: [prepare_release, build_rootfs]
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        VERSION: ['23.05', '24.10']
        CPU: [rk3399, rk3328]
        SET: [docker, non-docker]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: 下载 Rootfs
        uses: robinraju/release-downloader@v1.6
        with:
          repository: ${{ github.repository }}
          tag: ${{ needs.prepare_release.outputs.release_tag }}
          fileName: "rootfs-friendlywrt-${{ matrix.VERSION }}${{ matrix.SET == 'docker' && '-docker' || '' }}.tgz"
          out-file-path: ./friendlywrt
          latest: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 解压 Rootfs
        run: |
          mkdir -p project
          tar xvzf ./friendlywrt/rootfs-friendlywrt-${{ matrix.VERSION }}${{ matrix.SET == 'docker' && '-docker' || '' }}.tgz -C project

      - name: 构建镜像
        run: |
          cd project
          # 这里执行构建脚本，例如 build.sh sd-img
          echo "这里调用你的构建脚本生成 img 文件"

      - name: 上传镜像到 Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./project/out/*.img
          asset_name: ${{ matrix.CPU }}-FriendlyWrt-${{ matrix.VERSION }}${{ matrix.SET == 'docker' && '-docker' || '' }}.img
          tag: ${{ needs.prepare_release.outputs.release_tag }}
          overwrite: true
