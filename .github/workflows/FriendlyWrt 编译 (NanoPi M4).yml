name: 构建 FriendlyWrt RK3399

on:
  workflow_dispatch:   # 手动触发
  schedule:            # 定时任务，每周执行一次
    - cron: "0 20 * * 6"   # UTC 时间周六 20 点 -> 北京时间周日 4 点

env:
  CPU: rk3399
  FRIENDLYWRT_VERSION: v24.10
  DATE: ${{ github.run_id }}-${{ github.run_number }}

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        BUILD_TYPE: [normal, docker]

    steps:
      - name: 检出仓库
        uses: actions/checkout@v4

      - name: 清理旧的 Release 和 Artifact
        uses: dev-drprasad/delete-older-releases@v0.3.2
        with:
          keep_latest: 2
          delete_tags: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: 安装编译依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential git subversion flex bison gawk gettext \
            libncurses5-dev libncursesw5-dev zlib1g-dev unzip wget curl \
            python3 python3-distutils python3-setuptools rsync ccache

      - name: 下载 FriendlyWrt 源码
        run: |
          git clone --depth=1 https://github.com/friendlyarm/friendlywrt.git -b $FRIENDLYWRT_VERSION friendlywrt

      - name: 准备编译配置
        run: |
          cd friendlywrt
          cp ../configs/config_rk3399_ssr .config
          if [ "${{ matrix.BUILD_TYPE }}" = "docker" ]; then
            echo "CONFIG_PACKAGE_docker=y" >> .config
            echo "CONFIG_PACKAGE_luci-app-dockerman=y" >> .config
          fi
          yes "" | make olddefconfig

      - name: 编译固件
        run: |
          cd friendlywrt
          make -j$(nproc) || make -j1 V=s

      - name: 整理输出文件并重命名
        run: |
          mkdir -p output
          for f in friendlywrt/bin/targets/rockchip/armv8/*; do
            base=$(basename "$f")
            cp "$f" "output/${base%.img}-${{ matrix.BUILD_TYPE }}-${{ env.DATE }}.img"
          done

      - name: 上传构建产物
        uses: actions/upload-artifact@v4
        with:
          name: "固件-${{ matrix.BUILD_TYPE }}-${{ env.DATE }}"
          path: output/*

      - name: 发布到 Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: "rk3399-${{ env.FRIENDLYWRT_VERSION }}"
          name: "RK3399 FriendlyWrt 固件（${{ matrix.BUILD_TYPE }}-${{ env.DATE }}）"
          files: output/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
