name: Build FriendlyWrt for NanoPi M4

on:
  workflow_dispatch:
  watch:
    types: started

jobs:
  prepare_release:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id
    steps:
      - name: Get release tag
        id: release_tag
        run: |
          release_tag="NanoPiM4-FriendlyWrt-24.10-$(date +%Y-%m-%d)"
          echo "release_tag=$release_tag" >> $GITHUB_OUTPUT

      - name: Create empty release
        id: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_tag.outputs.release_tag }}
          draft: false
          prerelease: false
    outputs:
      release_tag: ${{ steps.release_tag.outputs.release_tag }}

  build_friendlywrt:
    needs: prepare_release
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        SET: [docker, non-docker]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Init environment
        run: |
          sudo apt-get update
          sudo apt-get install -y wget git curl unzip python3
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          wget https://raw.githubusercontent.com/friendlyarm/build-env-on-ubuntu-bionic/master/install.sh
          sed -i 's/^apt-get -y install openjdk-8-jdk/# &/' install.sh
          sudo bash ./install.sh
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'noreply@github.com'
          mkdir -p artifact project

      - name: Download source
        run: |
          cd project
          repo init --depth=1 -u https://github.com/friendlyarm/friendlywrt_manifests \
            -b master-v24.10 -m rk3399.xml \
            --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          repo sync -c friendlywrt --no-clone-bundle
          repo sync -c device/friendlyelec --no-clone-bundle
          repo sync -c scripts --no-clone-bundle
          repo sync -c toolchain --no-clone-bundle

     - name: Add luci-app-ssr-plus
       run: |
         cd project/package/custom
         git clone --depth=1 https://github.com/fw876/helloworld.git
         mv helloworld/luci-app-ssr-plus ./
         rm -rf helloworld


      - name: Prepare configs
        run: |
          cd project
          [ "${{ matrix.SET }}" == "docker" ] && SUFFIX="-docker"
          DIRNAME=friendlywrt24${SUFFIX}
          CONFIG=rockchip${SUFFIX}
          cat > .current_config.mk <<EOL
          . device/friendlyelec/rk3399/base.mk
          TARGET_IMAGE_DIRNAME=${DIRNAME}
          TARGET_FRIENDLYWRT_CONFIG=${CONFIG}
          EOL

      - name: Download packages
        run: |
          cd project/friendlywrt
          make download -j$(nproc)
          find dl -size -1024c -delete

      - name: Build FriendlyWrt
        run: |
          cd project/friendlywrt
          make -j$(nproc) || make -j1 V=s

      - name: Package rootfs
        id: create_rootfs_package
        run: |
          cd project
          [ "${{ matrix.SET }}" == "docker" ] && SUFFIX="-docker"
          rootfs_filename="rootfs-friendlywrt-24.10${SUFFIX}.tgz"
          tar czf ../artifact/${rootfs_filename} friendlywrt/rootfs friendlywrt/package
          echo "rootfs_filename=$rootfs_filename" >> $GITHUB_OUTPUT

      - name: Upload rootfs
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/${{ steps.create_rootfs_package.outputs.rootfs_filename }}
          asset_name: ${{ steps.create_rootfs_package.outputs.rootfs_filename }}
          tag: ${{ needs.prepare_release.outputs.release_tag }}
          overwrite: true

      - name: Build SD image
        run: |
          cd project
          [ "${{ matrix.SET }}" == "docker" ] && SUFFIX="-docker"
          ./build.sh sd-img
          IMG_FILE=$(ls out/*.img.gz | head -n 1)
          cp $IMG_FILE ../artifact/friendlywrt-24.10${SUFFIX}.img.gz

      - name: Upload SD image
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/friendlywrt-24.10${{ matrix.SET }}.img.gz
          asset_name: friendlywrt-24.10-${{ matrix.SET }}.img.gz
          tag: ${{ needs.prepare_release.outputs.release_tag }}
          overwrite: true
