name: FriendlyWrt 构建 NanoPi M4 镜像

on:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * 1' # 每周一 03:00 自动运行

env:
  FRIENDLYWRT_VERSION: 24.10
  TARGET_CPU: rk3399

jobs:
  prepare_release:
    runs-on: ubuntu-22.04
    steps:
      - name: 获取 release 标签
        id: release_tag
        run: |
          release_tag="FriendlyWrt-${FRIENDLYWRT_VERSION}-$(date +%Y-%m-%d)"
          echo "release_tag=$release_tag" >> $GITHUB_ENV
          echo "##[set-output name=release_tag;]$release_tag"

      - name: 创建 GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.release_tag }}
          draft: false
          prerelease: false

  build_friendlywrt:
    needs: prepare_release
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        SET: [docker, non-docker]

    steps:
      - name: Checkout 仓库
        uses: actions/checkout@v3

      - name: 安装依赖工具
        run: |
          sudo apt update
          sudo apt install -y git wget curl unzip zlib1g-dev python3 python3-distutils
          # 安装 repo 工具
          sudo curl -o /usr/local/bin/repo https://storage.googleapis.com/git-repo-downloads/repo
          sudo chmod a+x /usr/local/bin/repo
          repo --version

      - name: 初始化 FriendlyWrt 源码
        run: |
          mkdir -p project && cd project
          repo init --depth=1 -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v${FRIENDLYWRT_VERSION} -m ${TARGET_CPU}.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          repo sync -c friendlywrt --no-clone-bundle
          repo sync -c device/friendlyelec --no-clone-bundle
          cd ..

      - name: 初始化环境
        run: |
          sudo swapoff -a
          mkdir -p artifact
          echo "CPU 核心数: $(nproc)"

      - name: 安装 Docker (可选)
        if: matrix.SET == 'docker'
        run: |
          sudo apt remove -y docker docker.io containerd
          curl -fsSL https://get.docker.com | sh
          docker --version

      - name: 编译 FriendlyWrt
        run: |
          cd project/friendlywrt
          [ "${{ matrix.SET }}" == "docker" ] && SUFFIX="-docker" || SUFFIX=""
          DIRNAME=friendlywrt$(echo $FRIENDLYWRT_VERSION | awk -F . '{print $1}')${SUFFIX}
          CONFIG=rockchip${SUFFIX}
          cat > .current_config.mk <<EOL
          . device/friendlyelec/${TARGET_CPU}/base.mk
          TARGET_IMAGE_DIRNAME=${DIRNAME}
          TARGET_FRIENDLYWRT_CONFIG=${CONFIG}
          EOL
          ./build.sh friendlywrt
          make -j$(nproc)

      - name: 打包 rootfs
        run: |
          cd project
          [ "${{ matrix.SET }}" == "docker" ] && SUFFIX="-docker" || SUFFIX=""
          rootfs_filename="rootfs-friendlywrt-${FRIENDLYWRT_VERSION}${SUFFIX}.tgz"
          tar cvzf ../artifact/${rootfs_filename} friendlywrt/build_dir/target-*/root-*
          echo "rootfs 文件: $rootfs_filename"

      - name: 上传 rootfs 到 Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/rootfs-friendlywrt-${FRIENDLYWRT_VERSION}${{ matrix.SET == 'docker' && '-docker' || '' }}.tgz
          asset_name: rootfs-friendlywrt-${FRIENDLYWRT_VERSION}${{ matrix.SET == 'docker' && '-docker' || '' }}.tgz
          tag: ${{ needs.prepare_release.outputs.release_tag }}
          overwrite: true
