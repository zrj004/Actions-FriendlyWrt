name: 每周构建 FriendlyWrt NanoPi M4 镜像

on:
  schedule:
    - cron: '0 3 * * 0'   # 每周日 03:00 UTC
  workflow_dispatch:

env:
  FRIENDLYWRT_VERSION: 24.10
  CPU: rk3399

jobs:
  build_friendlywrt:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        BUILD_TYPE: [docker, non-docker]

    steps:
      - name: Checkout 仓库
        uses: actions/checkout@v3

      - name: 安装基础依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential git wget curl unzip xz-utils \
            libncurses5-dev zlib1g-dev python3-distutils rsync ccache dialog

      - name: 安装 Docker (仅 Docker 类型)
        if: matrix.BUILD_TYPE == 'docker'
        run: |
          curl -fsSL https://get.docker.com | sh
          sudo systemctl start docker
          sudo docker version

      - name: 下载 FriendlyWrt rootfs
        uses: robinraju/release-downloader@v1.6
        with:
          repository: friendlyarm/friendlywrt
          tag: v${{ env.FRIENDLYWRT_VERSION }}
          fileName: rk3399-rootfs-v${{ env.FRIENDLYWRT_VERSION }}.tgz
          latest: false
          out-file-path: ./friendlywrt

      - name: 解压 rootfs
        run: |
          mkdir -p friendlywrt
          tar xzf ./friendlywrt/rk3399-rootfs-v${{ env.FRIENDLYWRT_VERSION }}.tgz -C friendlywrt

      - name: 更新 feeds
        run: |
          cd friendlywrt
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 应用自定义配置
        run: |
          cd friendlywrt
          cp ../configs/config_rk3399_ssr .config
          if [ "${{ matrix.BUILD_TYPE }}" == "docker" ]; then
            echo "CONFIG_PACKAGE_docker=y" >> .config
            echo "CONFIG_PACKAGE_luci-app-dockerman=y" >> .config
          fi
          make defconfig

      - name: 编译 FriendlyWrt
        run: |
          cd friendlywrt
          make -j$(nproc) || make -j1 V=s

      - name: 打包镜像
        run: |
          cd friendlywrt
          IMG_NAME="NanoPi-M4-FriendlyWrt-${{ env.FRIENDLYWRT_VERSION }}"
          if [ "${{ matrix.BUILD_TYPE }}" == "docker" ]; then
            IMG_NAME="${IMG_NAME}-docker"
          fi
          tar czf ../artifact/${IMG_NAME}.tgz *

      - name: 上传 Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ./artifact/NanoPi-M4-FriendlyWrt-${{ env.FRIENDLYWRT_VERSION }}${{ matrix.BUILD_TYPE == 'docker' && '-docker' || '' }}.tgz
          asset_name: NanoPi-M4-FriendlyWrt-${{ env.FRIENDLYWRT_VERSION }}${{ matrix.BUILD_TYPE == 'docker' && '-docker' || '' }}.tgz
          tag: "FriendlyWrt-${{ env.FRIENDLYWRT_VERSION }}-$(date +'%Y-%m-%d')"
          overwrite: true
