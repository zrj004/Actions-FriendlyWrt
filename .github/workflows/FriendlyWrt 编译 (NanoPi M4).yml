name: FriendlyWrt NanoPi M4 编译

on:
  schedule:
    - cron: '0 3 * * 0'   # 每周日凌晨3点
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        SET: [docker, non-docker]
    env:
      FRIENDLYWRT_VERSION: "24.10"
    steps:
    - name: Checkout 仓库
      uses: actions/checkout@v3

    - name: 安装依赖
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git wget curl unzip bc ccache libncurses5-dev zlib1g-dev gawk gettext libssl-dev xsltproc python3-distutils

    - name: 安装 Docker（如果需要）
      if: matrix.SET == 'docker'
      run: |
        if ! command -v docker &> /dev/null; then
          curl -fsSL https://get.docker.com | sh
          sudo systemctl enable docker
          sudo systemctl start docker
        fi

    - name: 下载 FriendlyWrt 源（只 sync friendlywrt & device/friendlyelec）
      run: |
        mkdir -p project
        cd project
        repo init --depth=1 -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v${FRIENDLYWRT_VERSION} -m rk3399.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
        repo sync -c friendlywrt --no-clone-bundle
        repo sync -c device/friendlyelec --no-clone-bundle
        cd ..

    - name: 拉取 SSR Plus+ feed
      run: |
        cd project/friendlywrt
        mkdir -p package/custom
        echo "src-git custom https://github.com/ophub/luci-app-ssr-plus.git" > feeds.conf.custom
        chmod +x scripts/feeds
        ./scripts/feeds update -a
        ./scripts/feeds install -a
        cd ../..

    - name: 准备编译配置
      run: |
        cd project/friendlywrt
        [ "${{ matrix.SET }}" == "docker" ] && SUFFIX="-docker" || SUFFIX=""
        echo ". device/friendlyelec/rk3399/base.mk" > .current_config.mk
        echo "TARGET_FRIENDLYWRT_CONFIG=rockchip${SUFFIX}" >> .current_config.mk
        echo "TARGET_IMAGE_DIRNAME=friendlywrt${FRIENDLYWRT_VERSION}${SUFFIX}" >> .current_config.mk
        echo "TARGET_SD_RAW_FILENAME=NanoPi-M4-${FRIENDLYWRT_VERSION}${SUFFIX}.img" >> .current_config.mk
        make defconfig
        cd ../..

    - name: 编译 FriendlyWrt
      run: |
        cd project/friendlywrt
        make -j$(nproc) || make -j1 V=s
        cd ../..

    - name: 打包 rootfs
      run: |
        mkdir -p artifact
        cd project
        tar czf ../artifact/rootfs-friendlywrt-${FRIENDLYWRT_VERSION}.tgz friendlywrt/build_dir/target-*/root-*
        cd ..

    - name: 打包 SD 镜像
      run: |
        cd project/friendlywrt
        ./build.sh sd-img
        mv out/NanoPi-M4-${FRIENDLYWRT_VERSION}*.img ../artifact/
        cd artifact
        gzip *.img
        cd ..

    - name: 创建 Release 并上传
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "FriendlyWrt-${FRIENDLYWRT_VERSION}-$(date +'%Y-%m-%d')"
        draft: false
        prerelease: false

    - name: 上传 artifact
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ./artifact/*
        tag: "FriendlyWrt-${FRIENDLYWRT_VERSION}-$(date +'%Y-%m-%d')"
        overwrite: true
