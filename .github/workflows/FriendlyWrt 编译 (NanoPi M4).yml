name: FriendlyWrt 构建与发布（含 SD 卡镜像）

on:
  schedule:
    - cron: '0 3 * * 0'  # 每周日 3:00 UTC
  workflow_dispatch:     # 支持手动触发

jobs:
  prepare_release:
    runs-on: ubuntu-22.04
    steps:
      - name: 生成 Release 标签
        id: release_tag
        run: |
          release_tag="FriendlyWrt-$(date +%Y-%m-%d)"
          echo "生成标签: $release_tag"
          echo "release_tag=$release_tag" >> $GITHUB_OUTPUT

      - name: 创建空 Release
        id: release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.release_tag.outputs.release_tag }}
          draft: false
          prerelease: false

    outputs:
      release_tag: ${{ steps.release_tag.outputs.release_tag }}

  build_rootfs_img:
    needs: prepare_release
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        VERSION: ['23.05', '24.10']
        SET: [docker, non-docker]
        CPU: [rk3399]

    steps:
      - name: 安装依赖
        run: |
          sudo apt update
          sudo apt install -y unzip wget git build-essential libncurses5-dev libssl-dev qemu-user-static parted

      - name: 下载 FriendlyWrt rootfs
        uses: robinraju/release-downloader@v1.6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          repository: ${{ github.repository }}
          tag: ${{ needs.prepare_release.outputs.release_tag }}
          fileName: "rootfs-friendlywrt-${{ matrix.VERSION }}${{ matrix.SET == 'docker' && '-docker' || '' }}.tgz"
          out-file-path: ./friendlywrt
          latest: false
          tarBall: false
          zipBall: false

      - name: 解压 Rootfs
        run: |
          mkdir -p project
          tar xvzf ./friendlywrt/rootfs-friendlywrt-${{ matrix.VERSION }}${{ matrix.SET == 'docker' && '-docker' || '' }}.tgz -C project

      - name: 拉取 SSR Plus+ feed
        run: |
          cd project
          mkdir -p feeds/custom
          echo "src-git custom https://github.com/ophub/luci-app-ssr-plus.git" > feeds.conf.custom
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: 编译 Rootfs
        run: |
          cd project
          make defconfig
          make -j$(nproc)

      - name: 打包 Rootfs
        run: |
          mkdir -p artifact
          ROOTFS_FILE=rootfs-friendlywrt-${{ matrix.VERSION }}${{ matrix.SET == 'docker' && '-docker' || '' }}.tgz
          cd project
          tar czf ../artifact/$ROOTFS_FILE .

      - name: 生成 SD 卡镜像
        run: |
          cd project
          IMG_FILE=NanoPiM4-FriendlyWrt-${{ matrix.VERSION }}${{ matrix.SET == 'docker' && '-docker' || '' }}.img
          # 创建空镜像 4G
          dd if=/dev/zero of=../artifact/$IMG_FILE bs=1M count=4096
          # 创建分区
          parted ../artifact/$IMG_FILE mklabel msdos
          parted ../artifact/$IMG_FILE mkpart primary ext4 1MiB 100%
          mkfs.ext4 -F ../artifact/$IMG_FILE
          # 挂载镜像
          mkdir -p mnt
          sudo mount -o loop,offset=1048576 ../artifact/$IMG_FILE mnt
          sudo cp -a ./* mnt/
          sync
          sudo umount mnt
          rm -rf mnt

      - name: 上传 Rootfs 和镜像到 Release
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: |
            ./artifact/rootfs-friendlywrt-${{ matrix.VERSION }}${{ matrix.SET == 'docker' && '-docker' || '' }}.tgz
            ./artifact/NanoPiM4-FriendlyWrt-${{ matrix.VERSION }}${{ matrix.SET == 'docker' && '-docker' || '' }}.img
          asset_name: |
            rootfs-friendlywrt-${{ matrix.VERSION }}${{ matrix.SET == 'docker' && '-docker' || '' }}.tgz
            NanoPiM4-FriendlyWrt-${{ matrix.VERSION }}${{ matrix.SET == 'docker' && '-docker' || '' }}.img
          tag: ${{ needs.prepare_release.outputs.release_tag }}
          overwrite: true
