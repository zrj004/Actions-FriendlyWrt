name: Build FriendlyWrt NanoPi M4 Lite

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential flex bison gawk gcc-multilib g++-multilib \
            gettext libncurses5-dev libssl-dev python3-distutils \
            python3-setuptools rsync unzip file wget git curl

      - name: Clone FriendlyWrt
        run: |
          git clone https://github.com/friendlyarm/friendlywrt.git friendlywrt
          cd friendlywrt
          ls -l

      - name: Build NanoPi M4 Lite Image (OpenWrt standard)
        run: |
          cd friendlywrt

          # 清理旧配置
          make distclean

          # 初始化 feeds
          ./scripts/feeds update -a
          ./scripts/feeds install -a

          # 生成精简配置
          cat > .config <<EOF
          CONFIG_TARGET_rockchip=y
          CONFIG_TARGET_rockchip_armv8=y
          CONFIG_TARGET_rockchip_armv8_DEVICE_friendlyarm_nanopi-m4=y

          # 基础功能
          CONFIG_PACKAGE_luci=y
          CONFIG_PACKAGE_luci-compat=y
          CONFIG_PACKAGE_luci-lib-ipkg=y
          CONFIG_PACKAGE_ipset=y
          CONFIG_PACKAGE_ip-full=y

          # 插件
          CONFIG_PACKAGE_luci-app-ssr-plus=y
          CONFIG_PACKAGE_luci-app-passwall=y

          # Docker
          CONFIG_PACKAGE_docker=y
          CONFIG_PACKAGE_dockerd=y
          CONFIG_PACKAGE_luci-app-dockerman=y
          CONFIG_PACKAGE_luci-lib-docker=y

          # 关闭不必要模块
          #CONFIG_PACKAGE_ppp=n
          #CONFIG_PACKAGE_pppoe=n
          #CONFIG_PACKAGE_samba4-server=n
          #CONFIG_PACKAGE_wpad-basic=n
          EOF

          make defconfig
          make -j$(nproc)

      - name: Upload SD Image
        uses: actions/upload-artifact@v4
        with:
          name: NanoPi-M4-FriendlyWrt-Lite
          path: |
            friendlywrt/bin/targets/rockchip/armv8/*.img*
            friendlywrt/bin/targets/rockchip/armv8/*.img*.gz
