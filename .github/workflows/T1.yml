name: Build FriendlyWrt for NanoPi M4

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04

    strategy:
      matrix:
        SET: [docker, non-docker]

    steps:
      - name: Checkout
        uses: actions/checkout@main

      - name: Init build env
        run: |
          sudo apt-get update
          sudo apt-get install -y git wget build-essential python3 unzip rsync ccache
          git clone https://github.com/friendlyarm/repo
          sudo cp repo/repo /usr/bin/
          mkdir -p artifact project/friendlywrt

      - name: Cache downloads and host build
        uses: actions/cache@v3
        with:
          path: |
            project/friendlywrt/dl
            project/friendlywrt/build_dir/host
          key: friendlywrt-dl-build
          restore-keys: friendlywrt-dl-build

      - name: Download source (rk3399, v24.10)
        run: |
          cd project
          repo init --depth=1 -u https://github.com/friendlyarm/friendlywrt_manifests -b master-v24.10 \
                   -m rk3399.xml --repo-url=https://github.com/friendlyarm/repo --no-clone-bundle
          # 只同步必要 repo，提高效率
          repo sync -c friendlywrt --no-clone-bundle
          repo sync -c kernel --no-clone-bundle
          repo sync -c u-boot --no-clone-bundle
          repo sync -c toolchain --no-clone-bundle
          repo sync -c device/friendlyelec --no-clone-bundle

      - name: Add Passwall
        run: |
          cd project/friendlywrt
          echo 'src-git passwall https://github.com/xiaorouji/openwrt-passwall' >> feeds.conf.default
          ./scripts/feeds update passwall
          ./scripts/feeds install luci-app-passwall luci-i18n-passwall-zh-cn
          echo "CONFIG_PACKAGE_luci-app-passwall=y" >> .config
          echo "CONFIG_PACKAGE_luci-i18n-passwall-zh-cn=y" >> .config
          make defconfig

      - name: Build rootfs
        run: |
          cd project/friendlywrt
          make download -j$(nproc)
          make -j$(nproc) || make -j1 V=s

      - name: Build image
        run: |
          cd project
          [ "${{ matrix.SET }}" = "docker" ] && SUFFIX="-docker" || SUFFIX=""
          FILENAME=NanoPi-M4-FriendlyWrt-24.10${SUFFIX}.img
          echo "TARGET_IMAGE_DIRNAME=friendlywrt24${SUFFIX}" > .current_config.mk
          echo "TARGET_FRIENDLYWRT_CONFIG=rockchip${SUFFIX}" >> .current_config.mk
          echo "TARGET_SD_RAW_FILENAME=$FILENAME" >> .current_config.mk
          ./build.sh sd-img
          mv out/$FILENAME ../artifact/
          cd ../artifact
          gzip -9 $FILENAME

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: NanoPi-M4-images
          path: artifact/*.img.gz
